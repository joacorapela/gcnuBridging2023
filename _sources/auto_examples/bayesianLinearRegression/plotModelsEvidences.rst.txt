
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/bayesianLinearRegression/plotModelsEvidences.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_bayesianLinearRegression_plotModelsEvidences.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_bayesianLinearRegression_plotModelsEvidences.py:


Plot model evidence
===================

Plot the evidence of models of different polynomial order.

.. GENERATED FROM PYTHON SOURCE LINES 12-14

Import requirments
------------------

.. GENERATED FROM PYTHON SOURCE LINES 14-20

.. code-block:: default


    import numpy as np
    import plotly.graph_objects as go

    import joacorapela_common.stats.bayesianLinearRegression








.. GENERATED FROM PYTHON SOURCE LINES 21-23

Define a function to generate sinusoidal regression data
--------------------------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 23-30

.. code-block:: default


    def generateData(x, sigma=0.1):
        y = np.sin(2*np.pi*x)
        t = y + np.random.normal(loc=0, scale=sigma, size=len(y))
        return y, t









.. GENERATED FROM PYTHON SOURCE LINES 31-33

Define functions to generate the design matrix sinusoidal regression data
-------------------------------------------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 33-59

.. code-block:: default


    def getPolynomialBasisFunctions(M):
        basis_functions = [None for m in range(M+1)]
        for m in range(M+1):
            basis_functions[m] = lambda x, m=m: x**m
        return basis_functions


    def buildDesignMatrixRow(x, basis_functions):
        M = len(basis_functions)
        design_matrix_row = np.empty(shape=M, dtype=np.double)
        for m in range(M):
            design_matrix_row[m] = basis_functions[m](x)
        return design_matrix_row


    def buildDesignMatrix(x, basis_functions):
        M = len(basis_functions)
        N = len(x)
        design_matrix = np.empty(shape=(N, M), dtype=np.double)
        for n in range(N):
            design_matrix[n, :] = buildDesignMatrixRow(
                x=x[n], basis_functions=basis_functions)
        return design_matrix









.. GENERATED FROM PYTHON SOURCE LINES 60-62

Define function to compute the log model evidence
-------------------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 62-74

.. code-block:: default


    def computeLogEvidence(N, M, mN, SN, Phi, t,
                           prior_precision, likelihood_precision):
        EmN = (likelihood_precision/2.0*np.linalg.norm(t-np.dot(Phi, mN), 2)**2 +
               prior_precision/2.0*np.linalg.norm(mN, 2)**2)
        log_model_evidence = (M/2.0 * np.log(prior_precision) +
                              N/2.0 * np.log(likelihood_precision) -
                              EmN +
                              0.5 * np.log(np.linalg.det(SN)) -
                              N/2.0 * np.log(2*np.pi))
        return log_model_evidence








.. GENERATED FROM PYTHON SOURCE LINES 75-77

Generate train and test data
----------------------------

.. GENERATED FROM PYTHON SOURCE LINES 77-85

.. code-block:: default


    # N = 4
    N = 10
    # N = 15
    # N = 100
    x = np.sort(np.random.uniform(size=N))
    _, t = generateData(x=x)








.. GENERATED FROM PYTHON SOURCE LINES 86-88

Set estimation parameters
-------------------------

.. GENERATED FROM PYTHON SOURCE LINES 88-92

.. code-block:: default


    prior_precision = 0.005
    likelihood_precision = 9.0








.. GENERATED FROM PYTHON SOURCE LINES 93-95

Calculate model evindences
--------------------------

.. GENERATED FROM PYTHON SOURCE LINES 95-109

.. code-block:: default


    Ms = np.arange(10)
    log_evidences = [None for m in Ms]
    for M in Ms:
        basis_functions = getPolynomialBasisFunctions(M=M)
        Phi = buildDesignMatrix(x=x, basis_functions=basis_functions)
        mN, SN = \
            joacorapela_common.stats.bayesianLinearRegression.batchWithSimplePrior(
                Phi=Phi, y=t, alpha=prior_precision, beta=likelihood_precision)
        log_evidences[M] = computeLogEvidence(
            N=N, M=M, mN=mN, SN=SN, Phi=Phi, t=t,
            prior_precision=prior_precision,
            likelihood_precision=likelihood_precision)








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Plot models' log evidences
--------------------------

.. GENERATED FROM PYTHON SOURCE LINES 112-121

.. code-block:: default


    fig = go.Figure()
    trace = go.Scatter(x=Ms, y=log_evidences, mode="lines+markers",
                       line=dict(color="blue"))
    fig.add_trace(trace)
    fig.update_layout(xaxis_title="M",
                      yaxis_title=r"$\log p(\mathbf{t}|\alpha,\beta)$")
    fig






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>                        <script type="text/javascript">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>
            <script charset="utf-8" src="https://cdn.plot.ly/plotly-2.26.0.min.js"></script>                <div id="38c00122-c462-43fc-b0d4-9fe170b1ce23" class="plotly-graph-div" style="height:100%; width:100%;"></div>            <script type="text/javascript">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById("38c00122-c462-43fc-b0d4-9fe170b1ce23")) {                    Plotly.newPlot(                        "38c00122-c462-43fc-b0d4-9fe170b1ce23",                        [{"line":{"color":"blue"},"mode":"lines+markers","x":[0,1,2,3,4,5,6,7,8,9],"y":[-19.546812753124435,-12.284594092638539,-10.589259220342093,-9.812827431722571,-9.438573302644478,-9.449644691838959,-9.600417550030404,-9.78446052906549,-9.955997985840813,-10.099670469966037],"type":"scatter"}],                        {"template":{"data":{"histogram2dcontour":[{"type":"histogram2dcontour","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"choropleth":[{"type":"choropleth","colorbar":{"outlinewidth":0,"ticks":""}}],"histogram2d":[{"type":"histogram2d","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"heatmap":[{"type":"heatmap","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"heatmapgl":[{"type":"heatmapgl","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"contourcarpet":[{"type":"contourcarpet","colorbar":{"outlinewidth":0,"ticks":""}}],"contour":[{"type":"contour","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"surface":[{"type":"surface","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"mesh3d":[{"type":"mesh3d","colorbar":{"outlinewidth":0,"ticks":""}}],"scatter":[{"fillpattern":{"fillmode":"overlay","size":10,"solidity":0.2},"type":"scatter"}],"parcoords":[{"type":"parcoords","line":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatterpolargl":[{"type":"scatterpolargl","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"bar":[{"error_x":{"color":"#2a3f5f"},"error_y":{"color":"#2a3f5f"},"marker":{"line":{"color":"#E5ECF6","width":0.5},"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"bar"}],"scattergeo":[{"type":"scattergeo","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatterpolar":[{"type":"scatterpolar","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"histogram":[{"marker":{"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"histogram"}],"scattergl":[{"type":"scattergl","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatter3d":[{"type":"scatter3d","line":{"colorbar":{"outlinewidth":0,"ticks":""}},"marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scattermapbox":[{"type":"scattermapbox","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatterternary":[{"type":"scatterternary","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scattercarpet":[{"type":"scattercarpet","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"carpet":[{"aaxis":{"endlinecolor":"#2a3f5f","gridcolor":"white","linecolor":"white","minorgridcolor":"white","startlinecolor":"#2a3f5f"},"baxis":{"endlinecolor":"#2a3f5f","gridcolor":"white","linecolor":"white","minorgridcolor":"white","startlinecolor":"#2a3f5f"},"type":"carpet"}],"table":[{"cells":{"fill":{"color":"#EBF0F8"},"line":{"color":"white"}},"header":{"fill":{"color":"#C8D4E3"},"line":{"color":"white"}},"type":"table"}],"barpolar":[{"marker":{"line":{"color":"#E5ECF6","width":0.5},"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"barpolar"}],"pie":[{"automargin":true,"type":"pie"}]},"layout":{"autotypenumbers":"strict","colorway":["#636efa","#EF553B","#00cc96","#ab63fa","#FFA15A","#19d3f3","#FF6692","#B6E880","#FF97FF","#FECB52"],"font":{"color":"#2a3f5f"},"hovermode":"closest","hoverlabel":{"align":"left"},"paper_bgcolor":"white","plot_bgcolor":"#E5ECF6","polar":{"bgcolor":"#E5ECF6","angularaxis":{"gridcolor":"white","linecolor":"white","ticks":""},"radialaxis":{"gridcolor":"white","linecolor":"white","ticks":""}},"ternary":{"bgcolor":"#E5ECF6","aaxis":{"gridcolor":"white","linecolor":"white","ticks":""},"baxis":{"gridcolor":"white","linecolor":"white","ticks":""},"caxis":{"gridcolor":"white","linecolor":"white","ticks":""}},"coloraxis":{"colorbar":{"outlinewidth":0,"ticks":""}},"colorscale":{"sequential":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"sequentialminus":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"diverging":[[0,"#8e0152"],[0.1,"#c51b7d"],[0.2,"#de77ae"],[0.3,"#f1b6da"],[0.4,"#fde0ef"],[0.5,"#f7f7f7"],[0.6,"#e6f5d0"],[0.7,"#b8e186"],[0.8,"#7fbc41"],[0.9,"#4d9221"],[1,"#276419"]]},"xaxis":{"gridcolor":"white","linecolor":"white","ticks":"","title":{"standoff":15},"zerolinecolor":"white","automargin":true,"zerolinewidth":2},"yaxis":{"gridcolor":"white","linecolor":"white","ticks":"","title":{"standoff":15},"zerolinecolor":"white","automargin":true,"zerolinewidth":2},"scene":{"xaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white","gridwidth":2},"yaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white","gridwidth":2},"zaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white","gridwidth":2}},"shapedefaults":{"line":{"color":"#2a3f5f"}},"annotationdefaults":{"arrowcolor":"#2a3f5f","arrowhead":0,"arrowwidth":1},"geo":{"bgcolor":"white","landcolor":"#E5ECF6","subunitcolor":"white","showland":true,"showlakes":true,"lakecolor":"white"},"title":{"x":0.05},"mapbox":{"style":"light"}}},"xaxis":{"title":{"text":"M"}},"yaxis":{"title":{"text":"$\\log p(\\mathbf{t}|\\alpha,\\beta)$"}}},                        {"responsive": true}                    )                };                            </script>        </div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.011 seconds)


.. _sphx_glr_download_auto_examples_bayesianLinearRegression_plotModelsEvidences.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/joacorapela/gcnuBridging2023/gh-pages?filepath=notebooks/auto_examples/bayesianLinearRegression/plotModelsEvidences.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plotModelsEvidences.py <plotModelsEvidences.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plotModelsEvidences.ipynb <plotModelsEvidences.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
