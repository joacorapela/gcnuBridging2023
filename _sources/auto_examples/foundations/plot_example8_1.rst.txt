
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/foundations/plot_example8_1.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_foundations_plot_example8_1.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_foundations_plot_example8_1.py:


Example 8.1: conditional probability for two dice
=================================================

.. GENERATED FROM PYTHON SOURCE LINES 7-10

.. code-block:: default


    import numpy as np








.. GENERATED FROM PYTHON SOURCE LINES 11-13

This function draws a sample from the sample space


.. GENERATED FROM PYTHON SOURCE LINES 13-17

.. code-block:: default

    def sample():
        two_dice = np.random.randint(low=1, high=7, size=2)
        return two_dice








.. GENERATED FROM PYTHON SOURCE LINES 18-20

This function checks if the sample belong to the unconditioned event


.. GENERATED FROM PYTHON SOURCE LINES 20-25

.. code-block:: default

    def sample_in_unconditioned_event(two_dice):
        # is any of the two dice equal to six?
        answer = two_dice[0] == 6 or two_dice[1] == 6
        return answer








.. GENERATED FROM PYTHON SOURCE LINES 26-28

This function checks if the sample belong to the conditioned event


.. GENERATED FROM PYTHON SOURCE LINES 28-33

.. code-block:: default

    def sample_in_conditioned_and_uncondtioned_event(two_dice):
        # are  the two dice six?
        answer = two_dice[0] == 6 and two_dice[1] == 6
        return answer








.. GENERATED FROM PYTHON SOURCE LINES 34-37

Below we draw many samples, check if each sample belongs to the event, and
computes the probability of the event as the frequency of drawn samples
belonging to the event.

.. GENERATED FROM PYTHON SOURCE LINES 37-51

.. code-block:: default

    n_samples=1000000

    n_samples_in_unconditioned_event = 0
    n_samples_in_conditioned_and_uncondtioned_event = 0
    for i in range(n_samples):
        a_sample = sample()
        if sample_in_unconditioned_event(a_sample):
            n_samples_in_unconditioned_event += 1
        if sample_in_conditioned_and_uncondtioned_event(a_sample):
            n_samples_in_conditioned_and_uncondtioned_event += 1
    p_event = n_samples_in_conditioned_and_uncondtioned_event/n_samples_in_unconditioned_event

    print(f"probability {p_event}, "
          f"estimated from {n_samples} simulations")




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    probability 0.09084819313328563, estimated from 1000000 simulations





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 10.534 seconds)


.. _sphx_glr_download_auto_examples_foundations_plot_example8_1.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/joacorapela/gcnuBridging2023/gh-pages?filepath=notebooks/auto_examples/foundations/plot_example8_1.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_example8_1.py <plot_example8_1.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_example8_1.ipynb <plot_example8_1.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
