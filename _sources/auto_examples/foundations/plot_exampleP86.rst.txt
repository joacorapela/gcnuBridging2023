
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/foundations/plot_exampleP86.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_foundations_plot_exampleP86.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_foundations_plot_exampleP86.py:


Example p86: dice roll and coint tosses
=======================================

.. GENERATED FROM PYTHON SOURCE LINES 7-10

.. code-block:: default


    import numpy as np








.. GENERATED FROM PYTHON SOURCE LINES 11-13

This function draws a sample from the sample space


.. GENERATED FROM PYTHON SOURCE LINES 13-24

.. code-block:: default

    def sample():
        dice_roll = np.random.randint(low=1, high=7, size=1)[0]
        coin_tosses = [None] * dice_roll
        for i in range(dice_roll):
            uniform_sample = np.random.uniform()
            if uniform_sample < 0.5:
                coin_tosses[i] = "H"
            else:
                coin_tosses[i] = "T"
        return dice_roll, coin_tosses








.. GENERATED FROM PYTHON SOURCE LINES 25-27

This function checks if the sample belongs to the event


.. GENERATED FROM PYTHON SOURCE LINES 27-35

.. code-block:: default

    def sample_in_event(dice_coins):
        # no coin toss is a head (H)
        coin_tosses = dice_coins[1]
        for coin_toss in coin_tosses:
            if coin_toss == "H":
                return False
        return True








.. GENERATED FROM PYTHON SOURCE LINES 36-39

Below we draw many samples, check if each sample belongs to the event, and
computes the probability of the event as the frequency of drawn samples
belonging to the event.

.. GENERATED FROM PYTHON SOURCE LINES 39-50

.. code-block:: default

    n_samples=100000

    n_samples_in_event = 0
    for i in range(n_samples):
        a_sample = sample()
        if sample_in_event(a_sample):
            n_samples_in_event += 1
    p_event = n_samples_in_event/n_samples

    print(f"probability {p_event}, "
          f"estimated from {n_samples} simulations")




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    probability 0.16288, estimated from 100000 simulations





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 2.110 seconds)


.. _sphx_glr_download_auto_examples_foundations_plot_exampleP86.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/joacorapela/gcnuBridging2023/gh-pages?filepath=notebooks/auto_examples/foundations/plot_exampleP86.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_exampleP86.py <plot_exampleP86.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_exampleP86.ipynb <plot_exampleP86.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
